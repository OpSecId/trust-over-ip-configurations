---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: ${NAME}${SUFFIX}
objects:
  - kind: NetworkPolicy
    apiVersion: networking.k8s.io/v1
    metadata:
      name: ${NAME}${SUFFIX}-allow-ingress
      labels:
        name: ${NAME}${SUFFIX}-allow-ingress
        app: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      description: |
        Allow traffic from routes into the tails server container(s).
      ingress:
        - from:
            - namespaceSelector:
                matchLabels:
                  network.openshift.io/policy-group: ingress
      podSelector:
        matchLabels:
          role: ${ROLE}
          app: ${APP_NAME}${SUFFIX}
          env: ${TAG_NAME}
      policyTypes:
        - Ingress

  - kind: Service
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      ports:
        - name: ${NAME}-http
          port: ${{PORT}}
          protocol: TCP
          targetPort: ${{PORT}}
      selector:
        name: ${NAME}${SUFFIX}

  - kind: Route
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
      annotations:
        haproxy.router.openshift.io/timeout: ${ROUTE_TIMEOUT}
    spec:
      host: ${APPLICATION_DOMAIN}
      port:
        targetPort: ${NAME}-http
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}${SUFFIX}
        weight: 100

  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}${SUFFIX}
      strategy:
        type: Rolling
      template:
        metadata:
          name: ${NAME}${SUFFIX}
          labels:
            name: ${NAME}${SUFFIX}
            app: ${APP_NAME}${SUFFIX}
            app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
            app-group: ${APP_GROUP}
            role: ${ROLE}
            env: ${TAG_NAME}
        spec:
          volumes:
            - name: "${NAME}${SUFFIX}"
              persistentVolumeClaim:
                claimName: "${NAME}${SUFFIX}"
          containers:
            - name: ${NAME}${SUFFIX}
              command:
                - bash
                - -c
                - $(echo tails-server
                  --host 0.0.0.0
                  --port ${SERVER_PORT}
                  --storage-path ${SERVER_STORAGE_PATH}
                  --log-level ${SERVER_LOG_LEVEL});
              env:
                - name: SERVER_PORT
                  value: ${PORT}
                - name: SERVER_STORAGE_PATH
                  value: ${STORAGE_PATH}
                - name: SERVER_LOG_LEVEL
                  value: ${LOG_LEVEL}
              image:
              ports:
                - containerPort: ${{PORT}}
                  protocol: TCP
              # readinessProbe:
              #   timeoutSeconds: 30
              #   initialDelaySeconds: 3
              #   httpGet:
              #     path: /
              #     port: ${{PORT}}
              # livenessProbe:
              #   timeoutSeconds: 30
              #   initialDelaySeconds: 300
              #   httpGet:
              #     path: /
              #     port: ${{PORT}}
              imagePullPolicy: IfNotPresent
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              volumeMounts:
                - name: "${NAME}${SUFFIX}"
                  mountPath: "${STORAGE_PATH}"
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}${SUFFIX}
            from:
              kind: ImageStreamTag
              name: ${NAME}:${TAG_NAME}
              namespace: ${IMAGE_NAMESPACE}

  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      scaleTargetRef:
        kind: DeploymentConfig
        name: ${NAME}${SUFFIX}
      minReplicas: ${{MIN_REPLICAS}}
      maxReplicas: ${{MAX_REPLICAS}}

  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: ${NAME}${SUFFIX}
      labels:
        name: ${NAME}${SUFFIX}
        app: ${APP_NAME}${SUFFIX}
        app.kubernetes.io/part-of: ${APP_NAME}${SUFFIX}
        app-group: ${APP_GROUP}
        role: ${ROLE}
        env: ${TAG_NAME}
    spec:
      storageClassName: ${PERSISTENT_VOLUME_CLASS}
      accessModes:
        - ${PERSISTENT_VOLUME_ACCESS_MODE}
      resources:
        requests:
          storage: ${PERSISTENT_VOLUME_SIZE}

parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all the objects defined in this template.
    required: true
    value: tails-server
  - name: SUFFIX
    displayName: Suffix
    description: A name suffix used for all objects.
    required: false
    value:
  - name: APP_NAME
    displayName: App Name
    description: Used to group components together in the OpenShift console.
    required: true
    value: TailsServer
  - name: APP_GROUP
    displayName: App Group
    description: Used to group components together.
    required: true
    value: tails-server
  - name: ROLE
    displayName: Role
    description: The role of this service within the application - used for Network Policies.
    required: true
    value: tails
  - name: APPLICATION_DOMAIN
    displayName: Application Hostname
    description: The exposed hostname that will route to the service, if left blank a value will be defaulted.
    required: false
    value: tails-server-dev.apps.silver.devops.gov.bc.ca
  - name: ROUTE_TIMEOUT
    displayName: Route Timeout
    description: The timeout for the application route.  When this timeout is exceeded the application's route will respond with a 504 Gateway Timeout error.
    required: true
    value: 120s
  - name: IMAGE_NAMESPACE
    displayName: Namespace containing application images.
    required: true
    value: e79518-tools
  - name: TAG_NAME
    displayName: Environment TAG name
    description: The TAG name for this environment, e.g., dev, test, prod.
    required: true
    value: dev
  # ===============================================================================
  - name: LOG_LEVEL
    displayName: Log Level
    description: The logging level for the agent.
    required: true
    value: WARNING
  - name: PORT
    displayName: Tails Server Port
    description: The http port on which the service will listen.
    required: true
    value: "6543"
  - name: STORAGE_PATH
    displayName: Tails File Storage Path
    description: Tails file storage path.
    required: true
    value: /tmp/tails-files
  # ===============================================================================
  - name: PERSISTENT_VOLUME_CLASS
    displayName: Persistent Volume Class name
    description: The class of the volume; gluster-file, gluster-block, gluster-file-db, netapp-file-standard, netapp-block-standard
    required: false
    value: netapp-file-standard
  - name: PERSISTENT_VOLUME_SIZE
    displayName: Persistent Volume Size
    description: The size of the persistent volume , e.g. 512Mi, 1Gi, 2Gi.
    required: true
    value: 10Gi
  - name: PERSISTENT_VOLUME_ACCESS_MODE
    displayName: Persistent Volume Access Mode
    description: The access mode for the persistent volume; ReadWriteOnce (RWO), ReadWriteMany (RWX), ReadOnlyMany (ROX).  Block storage cannot be created as RWX.
    required: true
    value: ReadWriteMany
    # ===============================================================================
  - name: MIN_REPLICAS
    displayName: Minimum Replicas
    description: The minimum number of pods to have running.
    required: true
    value: "2"
  - name: MAX_REPLICAS
    displayName: Maximum Replicas
    description: The maximum number of pods to have running.
    required: true
    value: "4"
  # ===============================================================================
  - name: CPU_REQUEST
    displayName: Resources CPU Request
    description: The resources CPU request (in cores) for this build.
    required: true
    value: 10m
  - name: CPU_LIMIT
    displayName: Resources CPU Limit
    description: The resources CPU limit (in cores) for this build.
    required: true
    value: 1000m
  - name: MEMORY_REQUEST
    displayName: Resources Memory Request
    description: The resources Memory request (in Mi, Gi, etc) for this build.
    required: true
    value: 10Mi
  - name: MEMORY_LIMIT
    displayName: Resources Memory Limit
    description: The resources Memory limit (in Mi, Gi, etc) for this build.
    required: true
    value: 1000Mi
