name: Build Image
description: Build Image
inputs:
  ref:
    description: 'The branch, tag or SHA to checkout'
    required: false
    default: ''  
  context:
    description: 'The build context'
    required: true
    default: '.'
  dockerfile:
    description: 'The Dockerfile to build'
    required: true
    default: ''
  image_name:
    description: 'The name of the image'
    required: true
    default: ''
  image_tag:
    description: 'The image tag: determines both the source image tag and the tag applied to the built image'
    required: true
    default: 'latest'
  registry:
    description: 'The registry to push the image to'
    required: true
    default: ghcr.io
  registry_username:
    description: 'The username to login to the registry'
    required: true
  registry_password:
    description: 'The password to login to the registry'
    required: true

outputs:
  image_tag:
    description: "Image Tag"
    value: ${{ steps.values.outputs.image_tag }}
  image_version:
    description: "Image Version"
    value: ${{ steps.values.outputs.image_version }}
  buildtime:
    description: "Build Time"
    value: ${{ steps.values.outputs.buildtime }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4   
      with:
        ref: ${{ inputs.ref != '' && inputs.ref ||  env.GITHUB_REF }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry}}
        username: ${{ inputs.registry_username}}
        password: ${{ inputs.registry_password }}

    - name: Prepare docker tags for image
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.image_name }}
        tags: |
          type=raw,value=${{ inputs.image_tag }}

    - name: Build and push image
      id: builder
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          IMAGE_TAG=${{ inputs.image_tag }}

    - id: values  
      shell: bash
      run: |
        echo "image_tag=${{ fromJSON(steps.meta.outputs.json).tags[0] }}" >> $GITHUB_OUTPUT
        echo "image_version=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}" >> $GITHUB_OUTPUT
        echo "buildtime=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}" >> $GITHUB_OUTPUT
